{
  "hash": "8d6c4c2bbd9b4dac1262b2432b06b236",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Format Data\"\n---\n\n**Purpose:** Format data for modeling in JAGS\n\n\n\n## Base data\n\nTemperature and flow data\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- read_csv(\"data/EcoDrought_FlowTempData_DailyWeekly_clean.csv\")\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 167,535 × 23\n   site_name  basin date       flow_mean tempc_mean tempc_min tempc_max Yield_mm\n   <chr>      <chr> <date>         <dbl>      <dbl>     <dbl>     <dbl>    <dbl>\n 1 Avery Bro… <NA>  2020-01-01     NA       NA         NA        NA        NA   \n 2 Avery Bro… <NA>  2020-01-02     NA       NA         NA        NA        NA   \n 3 Avery Bro… <NA>  2020-01-03     NA       NA         NA        NA        NA   \n 4 Avery Bro… <NA>  2020-01-04     NA       NA         NA        NA        NA   \n 5 Avery Bro… <NA>  2020-01-05     NA       NA         NA        NA        NA   \n 6 Avery Bro… <NA>  2020-01-06     NA       NA         NA        NA        NA   \n 7 Avery Bro… <NA>  2020-01-07     NA       NA         NA        NA        NA   \n 8 Avery Bro… West… 2020-01-08      5.96     0.594      0.111     1.11      1.99\n 9 Avery Bro… West… 2020-01-09      4.81     0.0336     0         0.111     1.61\n10 Avery Bro… West… 2020-01-10      4.88     0.363      0         0.778     1.63\n# ℹ 167,525 more rows\n# ℹ 15 more variables: lat <dbl>, long <dbl>, area_sqmi <dbl>, elev_ft <dbl>,\n#   yday <dbl>, air_temp_mean <dbl>, precip_mmday <dbl>, swe_kgm2 <dbl>,\n#   daylength_sec <dbl>, shortrad_wm2 <dbl>, index <dbl>, year <dbl>,\n#   count <dbl>, siteYear <chr>, movingMean <dbl>\n```\n\n\n:::\n:::\n\n\nFix basins and trim to focal variables.\n\n::: {.cell}\n\n```{.r .cell-code}\nmysitebasins <- dat %>% \n  group_by(site_name) %>% \n  summarize(basin = unique(basin),\n            lat = unique(lat), \n            long = unique(long), \n            elev_ft = unique(elev_ft),\n            area_sqmi = unique(area_sqmi)) %>% \n  filter(!is.na(basin), !is.na(lat), !is.na(long), !is.na(elev_ft), !is.na(area_sqmi)) %>% \n  mutate(basin = recode(basin, \"Shields River\" = \"Yellowstone\"))\n\ndat <- dat %>% \n  select(-c(basin, lat, long, elev_ft, area_sqmi)) %>% \n  left_join(mysitebasins) %>% \n  select(site_name, basin, lat, long, elev_ft, area_sqmi, date, yday, year, siteYear, \n         tempc_mean, tempc_min, tempc_max, flow_mean, Yield_mm, air_temp_mean, precip_mmday, swe_kgm2, daylength_sec, shortrad_wm2)\n\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 167,535 × 20\n   site_name basin   lat  long elev_ft area_sqmi date        yday  year siteYear\n   <chr>     <chr> <dbl> <dbl>   <dbl>     <dbl> <date>     <dbl> <dbl> <chr>   \n 1 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-01     1  2020 Avery B…\n 2 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-02     2  2020 Avery B…\n 3 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-03     3  2020 Avery B…\n 4 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-04     4  2020 Avery B…\n 5 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-05     5  2020 Avery B…\n 6 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-06     6  2020 Avery B…\n 7 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-07     7  2020 Avery B…\n 8 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-08     8  2020 Avery B…\n 9 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-09     9  2020 Avery B…\n10 Avery Br… West…  42.4 -72.7    699.      2.83 2020-01-10    10  2020 Avery B…\n# ℹ 167,525 more rows\n# ℹ 10 more variables: tempc_mean <dbl>, tempc_min <dbl>, tempc_max <dbl>,\n#   flow_mean <dbl>, Yield_mm <dbl>, air_temp_mean <dbl>, precip_mmday <dbl>,\n#   swe_kgm2 <dbl>, daylength_sec <dbl>, shortrad_wm2 <dbl>\n```\n\n\n:::\n:::\n\n\nZ-score air temp and flow and calculate lagged air temp variables. *Note: air temp and flow are standardized by site.*\n\n::: {.cell}\n\n```{.r .cell-code}\n# ensure proper ordering\ndat <- dat[order(dat$site_name, dat$year, dat$yday),]\n\n# calculate lagged air temp\ndat <- dat %>%\n  mutate(Yield_mm_log = log(Yield_mm + 0.00001),\n         flow_mean_log = log(flow_mean + 0.00001)) %>%\n  group_by(site_name) %>%\n  mutate(z_Yield_mm_log = c(scale(Yield_mm_log, center = TRUE, scale = TRUE)),\n         z_air_temp_mean = c(scale(air_temp_mean, center = TRUE, scale = TRUE))) %>%\n  mutate(air_temp_mean_lag1 = lag(air_temp_mean, 1),\n         air_temp_mean_lag2 = lag(air_temp_mean, 2),\n         z_air_temp_mean_lag1 = lag(z_air_temp_mean, n = 1),\n         z_air_temp_mean_lag2 = lag(z_air_temp_mean, n = 2)) %>%\n  ungroup()\n```\n:::\n\n\nBreakpoints\n\n::: {.cell}\n\n```{.r .cell-code}\nspringFallBPs <- read_csv(\"data/breakpoints.csv\") %>% \n  mutate(basin = recode(basin, \"Shields River\" = \"Yellowstone\"))\nspringFallBPs\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 459 × 9\n   basin   site_name  year finalSpringBP sourceSpringBP finalFallBP sourceFallBP\n   <chr>   <chr>     <dbl>         <dbl> <chr>                <dbl> <chr>       \n 1 West B… Avery Br…  2020          66   directly calc…        300  directly ca…\n 2 West B… Avery Br…  2021          93   directly calc…        304  directly ca…\n 3 West B… Avery Br…  2022          94   directly calc…        313  directly ca…\n 4 West B… Avery Br…  2023          79   directly calc…        300. site mean   \n 5 West B… Avery Br…  2024          97   directly calc…        282  directly ca…\n 6 West B… Sanderso…  2019          83.2 site mean             300  site mean   \n 7 West B… Sanderso…  2020          66   directly calc…        301  directly ca…\n 8 West B… Sanderso…  2021          80   directly calc…        303  directly ca…\n 9 West B… Sanderso…  2022          94   directly calc…        313  directly ca…\n10 West B… Sanderso…  2023          78   directly calc…        302  directly ca…\n# ℹ 449 more rows\n# ℹ 2 more variables: quantileLo <dbl>, quantileHi <dbl>\n```\n\n\n:::\n:::\n\n\nJoin temp/flow data with breakpoints and filter to days within synchronized period. \n\n::: {.cell}\n\n```{.r .cell-code}\ndat_bp <- dat %>% \n  left_join(springFallBPs) %>%\n  filter(yday >= finalSpringBP & yday <= finalFallBP)\ndat_bp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 94,956 × 34\n   site_name basin   lat  long elev_ft area_sqmi date        yday  year siteYear\n   <chr>     <chr> <dbl> <dbl>   <dbl>     <dbl> <date>     <dbl> <dbl> <chr>   \n 1 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-06    66  2020 Avery B…\n 2 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-07    67  2020 Avery B…\n 3 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-08    68  2020 Avery B…\n 4 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-09    69  2020 Avery B…\n 5 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-10    70  2020 Avery B…\n 6 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-11    71  2020 Avery B…\n 7 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-12    72  2020 Avery B…\n 8 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-13    73  2020 Avery B…\n 9 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-14    74  2020 Avery B…\n10 Avery Br… West…  42.4 -72.7    699.      2.83 2020-03-15    75  2020 Avery B…\n# ℹ 94,946 more rows\n# ℹ 24 more variables: tempc_mean <dbl>, tempc_min <dbl>, tempc_max <dbl>,\n#   flow_mean <dbl>, Yield_mm <dbl>, air_temp_mean <dbl>, precip_mmday <dbl>,\n#   swe_kgm2 <dbl>, daylength_sec <dbl>, shortrad_wm2 <dbl>,\n#   Yield_mm_log <dbl>, flow_mean_log <dbl>, z_Yield_mm_log <dbl>,\n#   z_air_temp_mean <dbl>, air_temp_mean_lag1 <dbl>, air_temp_mean_lag2 <dbl>,\n#   z_air_temp_mean_lag1 <dbl>, z_air_temp_mean_lag2 <dbl>, …\n```\n\n\n:::\n:::\n\n\nShow the distribution of the number of temperature observations (non-NA) per site-year\n\n::: {.cell}\n\n```{.r .cell-code}\nobspersy <- dat_bp %>% group_by(siteYear) %>% summarize(numobs = sum(!is.na(tempc_mean))) %>% ungroup()\nobspersy %>% ggplot() + geom_histogram(aes(x = numobs)) + theme_bw()\n```\n\n::: {.cell-output-display}\n![](FormatData_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nDrop siteYears with less than 10 days of temperature observations\n\n::: {.cell}\n\n```{.r .cell-code}\ndrops <- obspersy %>% filter(numobs < 10)\ndat_bp <- dat_bp %>% filter(!siteYear %in% drops$siteYear)\n```\n:::\n\n\n\nPlot temp data with LOESS to show seasonal hysteresis\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_bp %>% \n  ggplot(aes(x = yday, y = tempc_mean)) + \n  geom_point(size = 0.1) +\n  facet_wrap(~factor(basin, levels = c(\"West Brook\", \"Staunton River\", \"Paine Run\", \"Flathead\", \"Yellowstone\", \"Snake River\", \"Donner Blitzen\"))) +\n  geom_smooth(color = \"red\", se = FALSE) +\n  theme_bw() #+ theme(panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](FormatData_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nCreate dummy site and basin variables (numeric for JAGS), and define \"rowNum\" variable to allow for identifying first rows and evaluation rows\n\n::: {.cell}\n\n```{.r .cell-code}\n# arrange\ndat_bp <- dat_bp %>% arrange(basin, site_name, year, yday)\n\n# create tibbles of site and basin numeric codes\nsitecodes <- tibble(site_name = unique(dat_bp$site_name), site_code = 1:length(unique(dat_bp$site_name)))\nbasincodes <- tibble(basin = unique(dat_bp$basin), basin_code = 1:length(unique(dat_bp$basin)))\n\n# join to data\ndat_bp <- dat_bp %>%\n  left_join(sitecodes) %>%\n  left_join(basincodes) %>%\n  mutate(rowNum = 1:nrow(.))\n```\n:::\n\n\n\n## Landscape covariates\n\n*To do -- derive additional landscape covariates presumed to affect stream temperature, or rather, mediate the relationship between stream and air temperature/flow (groundwater influence/pasta?, basin slope, lake area, percent forest cover, etc.)*\n\n## Check correlations\n\n\n## Write to file\n\nWrite formatted data to file\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(dat_bp, \"data/EcoDrought_FlowTempData_formatted.csv\")\n```\n:::\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}