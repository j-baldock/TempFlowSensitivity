{
  "hash": "e267f89a42948060795e94fa6cad0b92",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ModelTemp - EcoDrought\"\n---\n\n\n**Purpose:** fit hierarchical stream temp model to EcoDrought data.\n\n\n\nNotes:\n\n* Consider bringing in additional data from NWIS to fill in middle-upper end of catchment size spectrum (Snake: Blackrock, Cache, Granite...bigger rivers? (Hoback, Gros Ventre, Greys...where to draw the line?))\n\n## Load data\n\nAlso set flow = NA to 0. Probably should change this to latent variable in model, especially when expanding to sites where flow data is more rare\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- read_csv(\"data/EcoDrought_FlowTempData_formatted.csv\") %>% \n  filter(basin == \"Snake River\") %>%\n  mutate(rowNum = 1:nrow(.),\n         site_code = as.numeric(as.factor(site_name)),\n         year_code = year - min(year) + 1) %>%\n  filter(!is.na(tempc_mean)) %>%\n  mutate(z_Yield_mm_log = ifelse(is.na(z_Yield_mm_log), 0, z_Yield_mm_log))\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12,184 × 38\n   site_name basin   lat  long elev_ft area_sqmi date        yday  year siteYear\n   <chr>     <chr> <dbl> <dbl>   <dbl>     <dbl> <date>     <dbl> <dbl> <chr>   \n 1 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-03   184  2018 Grizzly…\n 2 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-04   185  2018 Grizzly…\n 3 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-05   186  2018 Grizzly…\n 4 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-06   187  2018 Grizzly…\n 5 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-07   188  2018 Grizzly…\n 6 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-08   189  2018 Grizzly…\n 7 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-09   190  2018 Grizzly…\n 8 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-10   191  2018 Grizzly…\n 9 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-11   192  2018 Grizzly…\n10 Grizzly … Snak…  43.8 -110.   8340.      12.7 2018-07-12   193  2018 Grizzly…\n# ℹ 12,174 more rows\n# ℹ 28 more variables: tempc_mean <dbl>, tempc_min <dbl>, tempc_max <dbl>,\n#   flow_mean <dbl>, Yield_mm <dbl>, air_temp_mean <dbl>, precip_mmday <dbl>,\n#   swe_kgm2 <dbl>, daylength_sec <dbl>, shortrad_wm2 <dbl>,\n#   Yield_mm_log <dbl>, flow_mean_log <dbl>, z_Yield_mm_log <dbl>,\n#   z_air_temp_mean <dbl>, air_temp_mean_lag1 <dbl>, air_temp_mean_lag2 <dbl>,\n#   z_air_temp_mean_lag1 <dbl>, z_air_temp_mean_lag2 <dbl>, …\n```\n\n\n:::\n:::\n\n\nDrop sites without any flow or water temp observations and re-do site and year codes\n\n::: {.cell}\n\n```{.r .cell-code}\ndropsites <- unlist(dat %>% \n  group_by(site_name) %>% \n  summarize(numt = sum(!is.na(tempc_mean)), \n            numf = sum(!is.na(z_Yield_mm_log))) %>% \n  ungroup() %>%\n  filter(numt == 0 | numf == 0) %>%\n  select(site_name))\n\ndat <- dat %>% \n  filter(!site_name %in% dropsites) %>%\n  mutate(rowNum = 1:nrow(.),\n         site_code = as.numeric(as.factor(site_name)),\n         year_code = year - min(year) + 1)\n```\n:::\n\n\nView site codes\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% group_by(site_name) %>% summarize(site_code = unique(site_code)) %>% ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 × 2\n   site_name                   site_code\n   <chr>                           <dbl>\n 1 Grizzly Creek                       1\n 2 Grouse Creek                        2\n 3 Leidy Creek Mouth                   3\n 4 Leidy Creek Upper                   4\n 5 NF Spread Creek Lower               5\n 6 NF Spread Creek Upper               6\n 7 Pacific Creek at Moran NWIS         7\n 8 Rock Creek                          8\n 9 SF Spread Creek Lower               9\n10 SF Spread Creek Upper              10\n11 Spread Creek Dam                   11\n```\n\n\n:::\n:::\n\n\nAny missing data? *Need to put a prior on flow*\n\n::: {.cell}\n\n```{.r .cell-code}\nany(is.na(dat$z_air_temp_mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(is.na(dat$z_air_temp_mean_lag1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(is.na(dat$z_air_temp_mean_lag2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(is.na(dat$z_Yield_mm_log))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\nView data\n\n::: panel-tabset\n\n#### Distributions\n\n::: {.cell}\n\n```{.r .cell-code}\nggpubr::ggarrange(dat %>% ggplot(aes(x = air_temp_mean, color = site_name)) + geom_density() + theme_bw(),\n                  dat %>% ggplot(aes(x = flow_mean_log, color = site_name)) + geom_density() + theme_bw(),\n                  dat %>% ggplot(aes(x = Yield_mm_log, color = site_name)) + geom_density() + theme_bw(),\n                  common.legend = TRUE, legend = \"right\", ncol = 1)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n#### Air temp\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dat, aes(yday, z_air_temp_mean))+\n  geom_line(aes(color = factor(year))) +\n  facet_grid(year ~ site_name)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n#### Water temp\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dat, aes(yday, tempc_mean))+\n  geom_line(aes(color = factor(year)))+\n  facet_grid(year ~ site_name)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n#### Flow (log and std)\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dat, aes(yday, z_Yield_mm_log))+\n  geom_line(aes(color = factor(year)))+\n  facet_grid(year ~ site_name)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n#### Tw ~ Ta + F\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% ggplot(aes(x = z_air_temp_mean, y = tempc_mean, color = z_Yield_mm_log)) + geom_point(size = 0.2) + facet_wrap(~site_name) + theme_bw()\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n#### Ta ~ F\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% ggplot(aes(x = z_air_temp_mean, y = z_Yield_mm_log, colour = tempc_mean)) + geom_point(size = 0.2) + facet_wrap(~site_name) + theme_bw() + ggpubr::stat_cor()\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n\n## Specify JAGS model\n\nSpecify hierarchical model following Letcher et al. (2016). MODIFIED:\n\n* add prior on covariates to deal with missing values\n* calculate Bayesian R^2 and RMSE\n* remove the year trends (same as for Hocking et al 2018)\n* add catchment covariate effects on random effects parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"model {\n\n    ###----------------- LIKELIHOOD -----------------###\n    \n    # Days without an observation on the previous day (first observation in a series)\n    # No autoregressive term\n    \n    for (i in 1:nFirstObsRows){\n      temp[firstObsRows[i]] ~ dnorm(stream.mu[firstObsRows[i]], pow(sigma, -2)) \n      stream.mu[firstObsRows[i]] <- trend[firstObsRows[i]]\n      trend[firstObsRows[i]] <- inprod(B.0[], X.0[firstObsRows[i], ]) + \n                                inprod(B.site[site[firstObsRows[i]], ], X.site[firstObsRows[i], ]) + \n                                inprod(B.year[year[firstObsRows[i]], ], X.year[firstObsRows[i], ])\n      #X.site[firstObsRows[i], ] ~ dnorm(0, pow(1, -2))\n      }\n    \n    # Days with an observation on the previous dat (all days following the first day)\n    # Includes autoregressive term (ar1)\n    \n    for (i in 1:nEvalRows){ \n      temp[evalRows[i]] ~ dnorm(stream.mu[evalRows[i]], pow(sigma, -2))\n      stream.mu[evalRows[i]] <- trend[evalRows[i]] + ar1[site[evalRows[i]]] * (temp[evalRows[i]-1] - trend[ evalRows[i]-1 ])\n      trend[evalRows[i]] <- inprod(B.0[], X.0[evalRows[i], ]) + \n                            inprod(B.site[site[evalRows[i]], ], X.site[evalRows[i], ]) + \n                            inprod(B.year[year[evalRows[i]], ], X.year[evalRows[i], ])\n      #X.site[evalRows[i], ] ~ dnorm(0, pow(1, -2))\n      }\n    \n    \n    ###----------------- PRIORS ---------------------###\n    \n    # ar1, hierarchical by site\n    for (i in 1:nsites){\n      ar1[i] ~ dnorm(ar1Mean, pow(ar1SD, -2)) T(-1,1)       \n    }\n    ar1Mean ~ dunif(-1, 1) \n    ar1SD ~ dunif(0, 2)\n\n    # model variance\n    sigma ~ dunif(0, 100)\n    \n    \n    # fixed effect coefficients\n    for (k in 1:Kfixed) {\n      B.0[k] ~ dnorm(0, 0.001)\n      }\n      \n    # random effect coefficients (by site)\n    for (k in 1:Krandom) {\n      sigma.B.site[k] ~ dunif(0, 100)\n      alpha.0[k] ~ dnorm(0, pow(10, -2))\n      alpha.1[k] ~ dnorm(0, pow(10, -2))\n      for (i in 1:nsites) {\n        B.site[i,k] ~ dnorm(mu.B.site[i,k], pow(sigma.B.site[k], -2))\n        mu.B.site[i,k] <- alpha.0[k] + alpha.1[k] * area[i]\n      }\n    }\n    \n    # YEAR EFFECTS\n    for(l in 1:L) {\n      sigma.b.year[l] ~ dunif(0, 100)\n      for(t in 1:Ti){\n        B.year[t, l] ~ dnorm(0, pow(sigma.b.year[l], -2))\n        }\n      }\n    \n    # # YEAR EFFECTS\n    # # Priors for random effects of year\n    # for (t in 1:Ti) { # Ti years\n    #   B.year[t, 1:L] ~ dmnorm(mu.year[ ], tau.B.year[ , ])\n    #   }\n    #   \n    # mu.year[1] <- 0\n    # \n    # for (l in 2:L) {\n    #   mu.year[l] ~ dnorm(0, 0.0001)\n    #   }\n    #   \n    # # Prior on multivariate normal std deviation\n    # tau.B.year[1:L, 1:L] ~ dwish(W.year[ , ], df.year)\n    # df.year <- L + 1\n    # sigma.B.year[1:L, 1:L] <- inverse(tau.B.year[ , ])\n    # for (l in 1:L) {\n    #   for (l.prime in 1:L) {\n    #     rho.B.year[l, l.prime] <- sigma.B.year[l, l.prime]/sqrt(sigma.B.year[l, l]*sigma.B.year[l.prime, l.prime])\n    #     }\n    #   sigma.b.year[l] <- sqrt(sigma.B.year[l, l])\n    # }\n    \n    \n    ###----------------- DERIVED VALUES -------------###\n    #residuals[1] <- 0 # hold the place. Not sure if this is necessary...\n    for (i in 1:n) {\n      residuals[i] <- temp[i] - stream.mu[i]\n    }\n    \n    # variance of model predictions (fixed + random effects)\n    var_fit <- (sd(stream.mu))^2\n\n    # residual variance\n    var_res <- (sd(residuals))^2\n\n    # calculate Bayesian R^2\n    R2 <- var_fit / (var_fit + var_res)\n\n    # Root mean squared error\n    rmse <- sqrt(mean(residuals[]^2))\n    \n    }\", file = \"JAGS models/DailyTempModelJAGS_Letcher_hierarchical_modified.txt\")\n```\n:::\n\n\n\nSpecify model following Letcher et al. (2016). MODIFIED\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"model {\n\n    ###----------------- LIKELIHOOD -----------------###\n    \n    # Days without an observation on the previous day (first observation in a series)\n    # No autoregressive term\n    \n    for (i in 1:n){\n      temp[i] ~ dnorm(stream.mu[i], pow(sigma, -2)) \n      stream.mu[i] <- trend[i]\n      trend[i] <- inprod(B.site[site[i], ], X.site[i, ])\n      \n      #flow[firstObsRows[i]] ~ dnorm(0, pow(10, -2))\n      }\n    \n    # for (i in 1:nFirstObsRows){\n    #   temp[firstObsRows[i]] ~ dnorm(stream.mu[firstObsRows[i]], pow(sigma, -2)) \n    #   stream.mu[firstObsRows[i]] <- trend[firstObsRows[i]]\n    #   trend[firstObsRows[i]] <- inprod(B.0[], X.0[firstObsRows[i], ]) + inprod(B.site[site[firstObsRows[i]], ], X.site[firstObsRows[i], ]) #+ inprod(B.year[year[firstObsRows[i]], ], X.year[firstObsRows[i], ])\n    #   \n    #   #flow[firstObsRows[i]] ~ dnorm(0, pow(10, -2))\n    #   }\n    # \n    # # Days with an observation on the previous dat (all days following the first day)\n    # # Includes autoregressive term (ar1)\n    # \n    # for (i in 1:nEvalRows){ \n    #   temp[evalRows[i]] ~ dnorm(stream.mu[evalRows[i]], pow(sigma, -2))\n    #   stream.mu[evalRows[i]] <- trend[evalRows[i]] + ar1[site[evalRows[i]]] * (temp[evalRows[i]-1] - trend[ evalRows[i]-1 ])\n    #   trend[evalRows[i]]  <- inprod(B.0[], X.0[evalRows[i], ]) + inprod(B.site[site[evalRows[i]], ], X.site[evalRows[i], ]) #+ inprod(B.year[year[evalRows[i]], ], X.year[evalRows[i], ])\n    #   \n    #   #flow[evalRows[i]] ~ dnorm(0, pow(10, -2))\n    #   }\n    \n    \n    ###----------------- PRIORS ---------------------###\n    \n    # # ar1, hierarchical by site\n    # for (i in 1:nSite){\n    #   ar1[i] ~ dnorm(ar1Mean, pow(ar1SD,-2) ) T(-1,1)       \n    # }\n    # ar1Mean ~ dunif( -1,1 ) \n    # ar1SD ~ dunif( 0, 2 )\n\n    # model variance\n    sigma ~ dunif(0, 100)\n    \n    \n    # fixed effect coefficients\n    for (k in 1:nFixedCovs) {\n      B.0[k] ~ dnorm(0, pow(100, -2))\n      }\n    \n    \n    # SITE EFFECTS\n    for (k in 1:nRandCovs) {\n      for (i in 1:nSite) {\n        B.site[i,k] ~ dnorm(0, pow(10, -2))   \n      }\n    }\n    \n      \n    # # YEAR EFFECTS\n    # # Priors for random effects of year\n    # for (t in 1:Ti) { # Ti years\n    #   B.year[t, 1:L] ~ dmnorm(mu.year[ ], tau.B.year[ , ])\n    #   }\n    # \n    # mu.year[1] <- 0\n    # \n    # for (l in 2:L) {\n    #   mu.year[l] ~ dnorm(0, 0.0001)\n    #   }\n    # \n    # # Prior on multivariate normal std deviation\n    # tau.B.year[1:L, 1:L] ~ dwish(W.year[ , ], df.year)\n    # df.year <- L + 1\n    # sigma.B.year[1:L, 1:L] <- inverse(tau.B.year[ , ])\n    # for (l in 1:L) {\n    #   for (l.prime in 1:L) {\n    #     rho.B.year[l, l.prime] <- sigma.B.year[l, l.prime]/sqrt(sigma.B.year[l, l]*sigma.B.year[l.prime, l.prime])\n    #     }\n    #   sigma.b.year[l] <- sqrt(sigma.B.year[l, l])\n    # }\n    \n    \n    ###----------------- DERIVED VALUES -------------###\n    \n    # residuals\n    # residuals[1] <- 0 # hold the place. Not sure if this is necessary...\n    for (i in 1:n) {\n      residuals[i] <- temp[i] - stream.mu[i]\n    }\n    \n    # variance of model predictions (fixed + random effects)\n    var_fit <- (sd(stream.mu))^2 \n\n    # residual variance\n    var_res <- (sd(residuals))^2\n\n    # calculate Bayesian R^2\n    R2 <- var_fit / (var_fit + var_res)\n    \n    # Root mean squared error\n    rmse <- sqrt(mean(residuals[]^2))\n    \n    }\", file = \"DailyTempModelJAGS_mod.txt\")\n```\n:::\n\n\n\n## Organize objects\n\nGet first observation indices and check that nFirstRowObs equals the number of unique site-years: **must be TRUE!**\n\n::: {.cell}\n\n```{.r .cell-code}\n# row indices for first observation in each site-year\nfirstObsRows <- unlist(dat %>% \n  group_by(siteYear) %>%\n  summarize(index = rowNum[min(which(!is.na(tempc_mean)))]) %>%\n  ungroup() %>% \n  select(index))\nnFirstObsRows <- length(firstObsRows)\n\n# does the number of first observations match the number of site years?\nnFirstObsRows == length(unique(dat$siteYear))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\nGet row indices for all other observations\n\n::: {.cell}\n\n```{.r .cell-code}\nevalRows <- unlist(dat %>% filter(!rowNum %in% firstObsRows) %>% select(rowNum))\nnEvalRows <- length(evalRows)\n```\n:::\n\n\nFixed and random effect data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.random <- data.frame(intercept = 1,\n                          airTemp = dat$z_air_temp_mean, \n                          flow =  dat$z_Yield_mm_log,\n                          airFlow = dat$z_air_temp_mean * dat$z_Yield_mm_log)\n\ndata.fixed <- data.frame(airTempLag1 = dat$z_air_temp_mean_lag1,\n                         airTempLag2 = dat$z_air_temp_mean_lag2) \n\ndata.random.years <- data.frame(intercept.year = rep(1, length.out = dim(data.fixed)[1])#, \n                                #dOY  = dat$yday, \n                                #dOY2 = dat$yday^2,\n                                #dOY3 = dat$yday^3\n                                )\n\ndata.random.covs <- log(dat %>% group_by(site_code) %>% summarize(area_sqmi = unique(area_sqmi)) %>% ungroup() %>% arrange(site_code) %>% pull(area_sqmi))\n```\n:::\n\n\nMisc. objects\n\n::: {.cell}\n\n```{.r .cell-code}\nTi <- length(unique(dat$year))\nL <- dim(data.random.years)[2]\nW.year <- diag(L)\n```\n:::\n\n\nCombine data in list\n\n::: {.cell}\n\n```{.r .cell-code}\n# combine data in a list\njags.data <- list(\"temp\" = dat$tempc_mean,\n                  \"nFirstObsRows\" = nFirstObsRows,\n                  \"firstObsRows\" = firstObsRows,\n                  \"nEvalRows\" = nEvalRows,\n                  \"evalRows\" = evalRows,\n                  \"X.0\" = as.matrix(data.fixed),\n                  \"X.site\" = as.matrix(data.random),\n                  \"X.year\" = as.matrix(data.random.years),\n                  \"Kfixed\" = dim(data.fixed)[2],\n                  \"Krandom\" = dim(data.random)[2],\n                  \"nsites\" = length(unique(dat$site_name)),\n                  \"Ti\" = Ti,\n                  \"L\" = L,\n                  \"W.year\" = W.year,\n                  \"n\" = dim(dat)[1],\n                  \"year\" = dat$year_code,\n                  \"site\" = dat$site_code,\n                  \"area\" = data.random.covs\n                  )\n```\n:::\n\n\nParameters to monitor\n\n::: {.cell}\n\n```{.r .cell-code}\njags.params <- c(\"residuals\",\n                 \"deviance\",\n                 \"sigma\",\n                 \"B.0\",\n                 \"B.site\",\n                 \"B.year\",\n                 \"rho.B.year\",\n                 \"mu.year\",\n                 \"sigma.b.year\",\n                 \"stream.mu\",\n                 \"ar1\" ,\n                 \"ar1Mean\",\n                 \"ar1SD\",\n                 \"temp\",\n                 \"sigma.B.site\",\n                 \"R2\",\n                 \"rmse\",\n                 \"alpha.0\",\n                 \"alpha.1\"\n                 )\n```\n:::\n\n\n\n## Fit model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ed <- jags.parallel(data = jags.data, inits = NULL, parameters.to.save = jags.params, \n                        model.file = \"JAGS models/DailyTempModelJAGS_Letcher_hierarchical_modified.txt\",\n                        n.chains = 10, n.thin = 10, n.burnin = 1000, n.iter = 3000, DIC = TRUE)\n```\n:::\n\n\n\n#### Save model ouput\n\nSave to file\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(fit_ed, \"Model objects/LetcherTempModel_EcoDrought_hierarchical.RDS\")\n```\n:::\n\n\nRead in fitted model object\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ed <- readRDS(\"Model objects/LetcherTempModel_EcoDrought_hierarchical.RDS\")\n```\n:::\n\n\nGet MCMC samples and summary\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_mod <- fit_ed\n# generate MCMC samples and store as an array\nmodelout <- top_mod$BUGSoutput\nMcmcList <- vector(\"list\", length = dim(modelout$sims.array)[2])\nfor(i in 1:length(McmcList)) { McmcList[[i]] = as.mcmc(modelout$sims.array[,i,]) }\n# rbind MCMC samples from 10 chains \nMcmcdat <- rbind(McmcList[[1]], McmcList[[2]], McmcList[[3]], McmcList[[4]], McmcList[[5]], McmcList[[6]], McmcList[[7]], McmcList[[8]], McmcList[[9]], McmcList[[10]])\nparam.summary <- modelout$summary\nhead(param.summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  mean         sd       2.5%        25%        50%       75%\nB.0[1]      2.15300662 0.03019149 2.09367575 2.13210168 2.15254591 2.1735374\nB.0[2]      0.09596838 0.03088395 0.03609678 0.07543631 0.09507888 0.1169487\nB.site[1,1] 3.31907307 0.42373653 2.47278936 3.03330096 3.33164372 3.6125047\nB.site[2,1] 4.67201490 0.27201792 4.12197692 4.49187169 4.67167411 4.8533811\nB.site[3,1] 3.73162935 0.26306430 3.21714881 3.56051475 3.73538781 3.9036637\nB.site[4,1] 7.72579212 0.29002571 7.15906884 7.53508128 7.72881227 7.9176183\n                97.5%      Rhat n.eff\nB.0[1]      2.2120172 1.0000096  2000\nB.0[2]      0.1563257 1.0010937  2000\nB.site[1,1] 4.1330942 1.0009200  2000\nB.site[2,1] 5.2124136 0.9998663  2000\nB.site[3,1] 4.2497683 1.0017038  1700\nB.site[4,1] 8.2921851 0.9997870  2000\n```\n\n\n:::\n:::\n\n\n\n#### Check convergence\n\nAny problematic R-hat values (>1.05)?\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_mod$BUGSoutput$summary[,8][top_mod$BUGSoutput$summary[,8] > 1.05]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnamed numeric(0)\n```\n\n\n:::\n:::\n\n\nView traceplots\n\n::: {.cell}\n\n```{.r .cell-code}\nMCMCtrace(top_mod, ind = TRUE, \n          params = c(\"B.0\", \"B.site\", \"B.year\", \n                     \"ar1\", \"alpha.0\", \"alpha.1\",\n                     \"sigma\"), pdf = FALSE)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-14.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-16.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-18.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-20.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-21.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-22.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-23.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-24.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-25.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-26.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-25-27.png){width=672}\n:::\n:::\n\n\nConvert to ggs object\n\n::: {.cell}\n\n```{.r .cell-code}\nggfit <- ggs(as.mcmc(top_mod), keep_original_order = TRUE)\nhead(ggfit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  Iteration Chain Parameter  value\n      <int> <int> <fct>      <dbl>\n1         1     1 alpha.0[1]  4.77\n2         2     1 alpha.0[1]  4.89\n3         3     1 alpha.0[1]  5.72\n4         4     1 alpha.0[1]  5.16\n5         5     1 alpha.0[1]  4.43\n6         6     1 alpha.0[1]  1.15\n```\n\n\n:::\n:::\n\n\n\n\n### Goodness of fit\n\nFormat observed and predicted values\n\n::: {.cell}\n\n```{.r .cell-code}\nMcmcdat <- as_tibble(Mcmcdat)\n\n# subset expected and observed MCMC samples\nppdat_exp <- as.matrix(Mcmcdat[,startsWith(names(Mcmcdat), \"stream.mu[\")])\nppdat_obs <- as.matrix(Mcmcdat[,startsWith(names(Mcmcdat), \"temp[\")])\n```\n:::\n\n\nBayesian p-value\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(ppdat_exp > ppdat_obs) / (dim(ppdat_obs)[1]*dim(ppdat_obs)[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5128413\n```\n\n\n:::\n:::\n\n\nPP-check, global\n\n::: {.cell}\n\n```{.r .cell-code}\nppdat_obs_mean <- apply(ppdat_obs, 2, mean)\nppdat_exp_mean <- apply(ppdat_exp, 2, mean)\ntibble(obs = ppdat_obs_mean, exp = ppdat_exp_mean) %>% \n  ggplot(aes(x = obs, y = exp)) + \n  geom_point(alpha = 0.1) + \n  # geom_smooth(method = \"lm\") +\n  geom_abline(intercept = 0, slope = 1, color = \"red\") + \n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Observed\") + ylab(\"Predicted (mean)\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\nPP-check by river and year\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(obs = ppdat_obs_mean, exp = ppdat_exp_mean, site = dat$site_name, year = dat$year) %>% \n  ggplot(aes(x = obs, y = exp)) + \n  geom_point(alpha = 0.1) + \n  # geom_smooth(method = \"lm\") +\n  geom_abline(intercept = 0, slope = 1, color = \"red\") + \n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Observed\") + ylab(\"Predicted (mean)\") +\n  facet_grid(year ~ site)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\nRMSE\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(unlist(ggfit %>% filter(Parameter == \"rmse\") %>% select(value)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6298153\n```\n\n\n:::\n\n```{.r .cell-code}\nggs_density(ggfit, \"rmse\") + theme_bw()\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\nR-squared\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(unlist(ggfit %>% filter(Parameter == \"R2\") %>% select(value)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9705148\n```\n\n\n:::\n\n```{.r .cell-code}\nggs_density(ggfit, \"R2\") + theme_bw()\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n\n\n## Plot model output\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyparams <- unique(ggfit$Parameter)\nmysites <- c(dat %>% group_by(site_name) %>% summarize(site_code = unique(site_code)) %>% ungroup() %>% select(site_name))\n```\n:::\n\n\n\n### Dot plots\n\n::: panel-tabset\n\n##### Fixed effects\n\n::: {.cell}\n\n```{.r .cell-code}\nggs_caterpillar(ggfit, family = \"B.0\", sort = FALSE) +\n  scale_y_discrete(labels = rev(c(\"Air temp, lag 1\", \"Air temp, lag 2\")), limits = rev) + \n  ylab(\"Fixed effects\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n\n##### Site intercepts\n\n::: {.cell}\n\n```{.r .cell-code}\nggfit %>%\n  filter(Parameter %in% c(\"B.site[1,1]\", \"B.site[2,1]\", \"B.site[3,1]\", \"B.site[4,1]\", \"B.site[5,1]\",\n                          \"B.site[6,1]\", \"B.site[7,1]\", \"B.site[8,1]\", \"B.site[9,1]\", \"B.site[10,1]\", \"B.site[11,1]\")) %>%\n  mutate(Parameter = factor(Parameter, levels = c(\"B.site[1,1]\", \"B.site[2,1]\", \"B.site[3,1]\", \"B.site[4,1]\", \"B.site[5,1]\",\n                                                  \"B.site[6,1]\", \"B.site[7,1]\", \"B.site[8,1]\", \"B.site[9,1]\", \"B.site[10,1]\", \"B.site[11,1]\"))) %>%\n  ggs_caterpillar(sort = FALSE) +\n  scale_y_discrete(labels = rev(mysites$site_name), limits = rev) + \n  ylab(\"Intercepts\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n##### Site slopes - temp\n\n::: {.cell}\n\n```{.r .cell-code}\nggfit %>%\n  filter(Parameter %in% c(\"B.site[1,2]\", \"B.site[2,2]\", \"B.site[3,2]\", \"B.site[4,2]\", \"B.site[5,2]\",\n                          \"B.site[6,2]\", \"B.site[7,2]\", \"B.site[8,2]\", \"B.site[9,2]\", \"B.site[10,2]\", \"B.site[11,2]\")) %>%\n  mutate(Parameter = factor(Parameter, levels = c(\"B.site[1,2]\", \"B.site[2,2]\", \"B.site[3,2]\", \"B.site[4,2]\", \"B.site[5,2]\",\n                          \"B.site[6,2]\", \"B.site[7,2]\", \"B.site[8,2]\", \"B.site[9,2]\", \"B.site[10,2]\", \"B.site[11,2]\"))) %>%\n  ggs_caterpillar(sort = FALSE) +\n  scale_y_discrete(labels = rev(mysites$site_name), limits = rev) + \n  ylab(\"Slopes, temperature effect\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n##### Site slopes - flow\n\n::: {.cell}\n\n```{.r .cell-code}\nggfit %>%\n  filter(Parameter %in% c(\"B.site[1,3]\", \"B.site[2,3]\", \"B.site[3,3]\", \"B.site[4,3]\", \"B.site[5,3]\",\n                          \"B.site[6,3]\", \"B.site[7,3]\", \"B.site[8,3]\", \"B.site[9,3]\", \"B.site[10,3]\", \"B.site[11,3]\")) %>%\n  mutate(Parameter = factor(Parameter, levels = c(\"B.site[1,3]\", \"B.site[2,3]\", \"B.site[3,3]\", \"B.site[4,3]\", \"B.site[5,3]\",\n                          \"B.site[6,3]\", \"B.site[7,3]\", \"B.site[8,3]\", \"B.site[9,3]\", \"B.site[10,3]\", \"B.site[11,3]\"))) %>%\n  ggs_caterpillar(sort = FALSE) +\n  scale_y_discrete(labels = rev(mysites$site_name), limits = rev) + \n  ylab(\"Slopes, flow effect\") +\n  theme_bw() + geom_vline(xintercept = 0, linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n##### Site slopes - temp x flow\n\n::: {.cell}\n\n```{.r .cell-code}\nggfit %>%\n  filter(Parameter %in% c(\"B.site[1,4]\", \"B.site[2,4]\", \"B.site[3,4]\", \"B.site[4,4]\", \"B.site[5,4]\",\n                          \"B.site[6,4]\", \"B.site[7,4]\", \"B.site[8,4]\", \"B.site[9,4]\", \"B.site[10,4]\", \"B.site[11,4]\")) %>%\n  mutate(Parameter = factor(Parameter, levels = c(\"B.site[1,4]\", \"B.site[2,4]\", \"B.site[3,4]\", \"B.site[4,4]\", \"B.site[5,4]\",\n                          \"B.site[6,4]\", \"B.site[7,4]\", \"B.site[8,4]\", \"B.site[9,4]\", \"B.site[10,4]\", \"B.site[11,4]\"))) %>%\n  ggs_caterpillar(sort = FALSE) +\n  scale_y_discrete(labels = rev(mysites$site_name), limits = rev) + \n  ylab(\"Slopes, temp-flow interaction\") +\n  theme_bw() + geom_vline(xintercept = 0, linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n##### Autoregressive terms\n\n::: {.cell}\n\n```{.r .cell-code}\nggs_caterpillar(ggfit %>% filter(Parameter %in% c(\"ar1[1]\", \"ar1[2]\", \"ar1[3]\", \"ar1[4]\", \"ar1[5]\",\n                          \"ar1[6]\", \"ar1[7]\", \"ar1[8]\", \"ar1[9]\", \"ar1[10]\", \"ar1[11]\")) %>%\n                  mutate(Parameter = factor(Parameter, levels = c(\"ar1[1]\", \"ar1[2]\", \"ar1[3]\", \"ar1[4]\", \"ar1[5]\",\n                          \"ar1[6]\", \"ar1[7]\", \"ar1[8]\", \"ar1[9]\", \"ar1[10]\", \"ar1[11]\"))),\n                sort = FALSE) + scale_y_discrete(labels = rev(mysites$site_name), limits = rev) + theme_bw() \n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n##### Year effects (offsets)\n\n::: {.cell}\n\n```{.r .cell-code}\nggfit %>%\n  filter(Parameter %in% c(\"B.year[1,1]\", \"B.year[2,1]\", \"B.year[3,1]\", \"B.year[4,1]\", \"B.year[5,1]\",\n                          \"B.year[6,1]\", \"B.year[7,1]\", \"B.year[8,1]\", \"B.year[9,1]\", \"B.year[10,1]\", \n                          \"B.year[11,1]\", \"B.year[12,1]\", \"B.year[13,1]\", \"B.year[14,1]\")) %>%\n  mutate(Parameter = factor(Parameter, levels = c(\"B.year[1,1]\", \"B.year[2,1]\", \"B.year[3,1]\", \"B.year[4,1]\", \"B.year[5,1]\",\n                          \"B.year[6,1]\", \"B.year[7,1]\", \"B.year[8,1]\", \"B.year[9,1]\", \"B.year[10,1]\", \n                          \"B.year[11,1]\", \"B.year[12,1]\", \"B.year[13,1]\", \"B.year[14,1]\"))) %>%\n  ggs_caterpillar(sort = FALSE) +\n  scale_y_discrete(labels = rev(sort(unique(dat$year))), limits = rev) + \n  ylab(\"Year effects, offsets to intercepts\") +\n  theme_bw() + geom_vline(xintercept = 0, linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n##### Catchment area effects\n\n::: {.cell}\n\n```{.r .cell-code}\nggs_caterpillar(ggfit, family = \"alpha.1\", sort = FALSE) +\n  scale_y_discrete(labels = rev(c(\"Intercepts\", \"Temp eff.\", \"Flow eff.\", \"Temp-Flow int.\")), limits = rev) + \n  ylab(\"Catchment size effects\") +\n  theme_bw() + geom_vline(xintercept = 0, linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n\n\n### Marginal efffects\n\n#### Temp-flow by site\n\nSite names and codes\n\n::: {.cell}\n\n```{.r .cell-code}\nsitecodes <- dat %>% group_by(site_name) %>% summarize(site_code = unique(site_code)) %>% ungroup()\nsitecodes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 × 2\n   site_name                   site_code\n   <chr>                           <dbl>\n 1 Grizzly Creek                       1\n 2 Grouse Creek                        2\n 3 Leidy Creek Mouth                   3\n 4 Leidy Creek Upper                   4\n 5 NF Spread Creek Lower               5\n 6 NF Spread Creek Upper               6\n 7 Pacific Creek at Moran NWIS         7\n 8 Rock Creek                          8\n 9 SF Spread Creek Lower               9\n10 SF Spread Creek Upper              10\n11 Spread Creek Dam                   11\n```\n\n\n:::\n:::\n\n\nPlotting function\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot <- function(code) {\n  np <- 100\n  myriv <- sitecodes$site_name[code]\n  x_temp <- seq(from = min(dat$z_air_temp_mean[dat$site_name == myriv]),\n                to = max(dat$z_air_temp_mean[dat$site_name == myriv]),\n                length.out = np)\n  x_flow <- seq(from = min(dat$z_Yield_mm_log[dat$site_name == myriv]),\n                to = max(dat$z_Yield_mm_log[dat$site_name == myriv]),\n                length.out = np)\n  pred_df <- expand_grid(x_temp, x_flow)\n\n  # predict from model\n  pred_df$pred <- param.summary[paste(\"B.site[\", code, \",1]\", sep = \"\"),1] + param.summary[paste(\"B.site[\", code, \",2]\", sep = \"\"),1]*pred_df$x_temp + param.summary[paste(\"B.site[\", code, \",3]\", sep = \"\"),1]*pred_df$x_flow + param.summary[paste(\"B.site[\", code, \",4]\", sep = \"\"),1]*pred_df$x_temp*pred_df$x_flow\n\n  # lines \n  p1 <- ggplot(pred_df, aes(x = x_temp, y = pred, color = x_flow, group = x_flow)) +\n    geom_line() +\n    scale_color_distiller(palette = \"BrBG\", direction = +1) +\n    theme_bw() + theme(panel.grid = element_blank()) +\n    labs(color = \"Flow\") + xlab(\"Air temperature\") + ylab(\"Water temperature\") + ylim(0,20) #+\n    #geom_point(dat %>% filter(site_name == myriv), mapping = aes(x = z_air_temp_mean, y = tempc_mean, group = NA), color = \"black\", size = 0.2, shape = 16) \n # heatmap\n  p2 <- ggplot(pred_df, aes(x = x_temp, y = x_flow)) +\n    geom_tile(aes(fill = pred)) +\n    scale_fill_distiller(palette = \"Spectral\", limits = c(0,20)) +\n    theme_bw() + theme(panel.grid = element_blank()) +\n    scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0)) +\n    labs(fill = \"Water\\ntemp.\") + xlab(\"Air temperature\") + ylab(\"Flow\") #+ \n    #geom_point(data = dat %>% filter(site_name == myriv), aes(x = z_air_temp_mean, y = z_Yield_mm_log, color = tempc_mean)) +\n    #scale_color_distiller(palette = \"Spectral\", limits = c(0,20)) \n  # combine\n  egg::ggarrange(p1, p2, nrow = 1)\n}\n```\n:::\n\n\n\n*Interpretation of these plots (specifically, stream temperature outcome) is complicated by the ~large effects of lagged air temperature variables and temporal autocorrelation*\n\n::: panel-tabset\n\n##### Grizzly Creek\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(1)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n##### Grouse Creek\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(2)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n##### Leidy Creek Mouth\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(3)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n##### NF Spread Creek Lower\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(5)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\n##### NF Spread Creek Upper\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(6)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n##### Pacific Creek\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(7)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\n##### Rock Creek\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(8)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\n##### SF Spread Creek Lower\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(9)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n\n##### SF Spread Creek Upper\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(10)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n\n##### Spread Creek Dam\n\n::: {.cell}\n\n```{.r .cell-code}\nmargplot(11)\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n#### Site-level effects by covs\n\nAre temp and flow effects correlated? *Yes...do we need to model this correlation?*\n\n::: {.cell}\n\n```{.r .cell-code}\nggfit %>%\n  filter(Parameter %in% c(\"B.site[1,2]\", \"B.site[2,2]\", \"B.site[3,2]\", \"B.site[4,2]\", \"B.site[5,2]\",\n                          \"B.site[6,2]\", \"B.site[7,2]\", \"B.site[8,2]\", \"B.site[9,2]\", \"B.site[10,2]\", \"B.site[11,2]\")) %>%\n  mutate(Parameter = factor(Parameter, levels = c(\"B.site[1,2]\", \"B.site[2,2]\", \"B.site[3,2]\", \"B.site[4,2]\", \"B.site[5,2]\",\n                          \"B.site[6,2]\", \"B.site[7,2]\", \"B.site[8,2]\", \"B.site[9,2]\", \"B.site[10,2]\", \"B.site[11,2]\"))) %>%\n  group_by(Parameter) %>% \n  summarize(tempeff = mean(value)) %>%\n  ungroup() %>%\n  mutate(site_name = mysites$site_name) %>%\n  select(-Parameter) %>%\n  left_join(ggfit %>%\n  filter(Parameter %in% c(\"B.site[1,3]\", \"B.site[2,3]\", \"B.site[3,3]\", \"B.site[4,3]\", \"B.site[5,3]\",\n                          \"B.site[6,3]\", \"B.site[7,3]\", \"B.site[8,3]\", \"B.site[9,3]\", \"B.site[10,3]\", \"B.site[11,3]\")) %>%\n  mutate(Parameter = factor(Parameter, levels = c(\"B.site[1,3]\", \"B.site[2,3]\", \"B.site[3,3]\", \"B.site[4,3]\", \"B.site[5,3]\",\n                          \"B.site[6,3]\", \"B.site[7,3]\", \"B.site[8,3]\", \"B.site[9,3]\", \"B.site[10,3]\", \"B.site[11,3]\"))) %>%\n  group_by(Parameter) %>% \n  summarize(floweff = mean(value)) %>%\n  ungroup() %>%\n  mutate(site_name = mysites$site_name) %>%\n    select(-Parameter)) %>%\n  ggplot(aes(x = tempeff, y = floweff)) + geom_point() +\n  geom_smooth(method = \"lm\") +\n  xlab(\"Temperature effect\") + ylab(\"Flow effect\") +\n  theme_bw() + ggpubr::stat_cor(label.y.npc = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n\n*Note that for these 11 sites, catchment area and elevation are correlated*\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% group_by(site_name) %>% summarize(area_sqmi = unique(area_sqmi), elev_ft = unique(elev_ft)) %>% ggplot(aes(x = elev_ft, y = log(area_sqmi))) + geom_point() + geom_smooth(method = \"lm\") + theme_bw() + ggpubr::stat_cor(label.x.npc = \"center\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp.pars <- c(\"B.site[1,2]\", \"B.site[2,2]\", \"B.site[3,2]\", \"B.site[4,2]\", \"B.site[5,2]\", \"B.site[6,2]\", \"B.site[7,2]\", \"B.site[8,2]\", \"B.site[9,2]\", \"B.site[10,2]\", \"B.site[11,2]\")\nflow.pars <- c(\"B.site[1,3]\", \"B.site[2,3]\", \"B.site[3,3]\", \"B.site[4,3]\", \"B.site[5,3]\", \"B.site[6,3]\", \"B.site[7,3]\", \"B.site[8,3]\", \"B.site[9,3]\", \"B.site[10,3]\", \"B.site[11,3]\")\nint.pars <- c(\"B.site[1,4]\", \"B.site[2,4]\", \"B.site[3,4]\", \"B.site[4,4]\", \"B.site[5,4]\", \"B.site[6,4]\", \"B.site[7,4]\", \"B.site[8,4]\", \"B.site[9,4]\", \"B.site[10,4]\", \"B.site[11,4]\")\n\n# get mean and 95% credible intervals for random effect parameters\nmytib <- sitecodes %>%\n  mutate(temp.mean = param.summary[temp.pars,1],\n         temp.low = param.summary[temp.pars,3],\n         temp.high = param.summary[temp.pars,7],\n         flow.mean = param.summary[flow.pars,1],\n         flow.low = param.summary[flow.pars,3],\n         flow.high = param.summary[flow.pars,7],\n         int.mean = param.summary[int.pars,1],\n         int.low = param.summary[int.pars,3],\n         int.high = param.summary[int.pars,7],\n         area_log = jags.data$area\n         )\nmytib\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 × 12\n   site_name site_code temp.mean temp.low temp.high flow.mean flow.low flow.high\n   <chr>         <dbl>     <dbl>    <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n 1 Grizzly …         1      1.63     1.41      1.84    0.283  -0.00646    0.601 \n 2 Grouse C…         2      1.63     1.47      1.78    0.182   0.00721    0.353 \n 3 Leidy Cr…         3      1.47     1.33      1.62   -0.0494 -0.174      0.0755\n 4 Leidy Cr…         4      1.19     1.04      1.33    0.394  -0.188      1.03  \n 5 NF Sprea…         5      1.69     1.53      1.84   -0.0936 -0.202      0.0192\n 6 NF Sprea…         6      1.66     1.43      1.92    0.373   0.169      0.596 \n 7 Pacific …         7      2.19     1.89      2.47   -0.510  -0.773     -0.257 \n 8 Rock Cre…         8      1.35     1.19      1.51    0.271   0.110      0.426 \n 9 SF Sprea…         9      1.88     1.71      2.03   -0.0220 -0.149      0.118 \n10 SF Sprea…        10      1.96     1.74      2.20    0.0991 -0.117      0.341 \n11 Spread C…        11      2.27     2.08      2.46   -0.454  -0.650     -0.267 \n# ℹ 4 more variables: int.mean <dbl>, int.low <dbl>, int.high <dbl>,\n#   area_log <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\nnsims <- 100\n```\n:::\n\n\n\nTemperature effect: stream temperature sensitivity to air temperature is greater in larger catchments (presumably b/c hillslope/groundwater controls on temp are proportionally much weaker). Also, in larger catchments, water has been exposed to air for longer and thus has had more time to equilibrate with local environmental conditions. But interestingly, no effect of mean summer yield, a proxy for relative groundwater contributions to stream flow. \n\n::: {.cell}\n\n```{.r .cell-code}\nxseq <- seq(from = min(jags.data$area), to = max(jags.data$area), length.out = nsims)\npreds <- matrix(data = NA, nrow = dim(Mcmcdat)[1], ncol = nsims)\n\nfor (j in 1:dim(Mcmcdat)[1]) {\n  preds[j,] <- unlist(Mcmcdat[j,\"alpha.0[2]\"]) + unlist(Mcmcdat[j,\"alpha.1[2]\"])*xseq\n}\nymean <- apply(preds, 2, mean)\nylow <- apply(preds, 2, quantile, probs = 0.025)\nyhigh <- apply(preds, 2, quantile, probs = 0.975)\n\nggplot() +\n  geom_ribbon(aes(x = xseq, ymin = ylow, ymax = yhigh), fill = \"grey\") +\n  geom_line(aes(x = xseq, y = ymean), color = \"black\", linewidth = 1, lineend = \"round\") +\n  geom_errorbar(aes(x = mytib$area_log, ymin = mytib$temp.low, ymax = mytib$temp.high), width = 0.1) +\n  geom_point(aes(x = mytib$area_log, y = mytib$temp.mean), size = 2, shape = 21, fill = \"white\") +\n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Catchment area (log scale)\") + ylab(\"Temperature effect (posterior mean)\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\nFlow effect: in small catchments, increased flow has a warming effect on stream temperature, whereas in large catchments, increased flow has a cooling effect on stream temperature. In small catchments, where proportional contributions from groundwater to streamflow are relatively high, increased flows during snowmelt/runoff warm stream temperatures as snowmelt temperature is warmer than groundwater temperature (???). But in larger catchments where volumetric groundwater contributions are ~low relative to discharge, increased flows during snowmelt cool stream temps as snowmelt temps are colder than ambient air temperatures (which more strongly influence stream temps relative to smaller streams).\n\n::: {.cell}\n\n```{.r .cell-code}\nxseq <- seq(from = min(jags.data$area), to = max(jags.data$area), length.out = nsims)\npreds <- matrix(data = NA, nrow = dim(Mcmcdat)[1], ncol = nsims)\n\nfor (j in 1:dim(Mcmcdat)[1]) {\n  preds[j,] <- unlist(Mcmcdat[j,\"alpha.0[3]\"]) + unlist(Mcmcdat[j,\"alpha.1[3]\"])*xseq\n}\nymean <- apply(preds, 2, mean)\nylow <- apply(preds, 2, quantile, probs = 0.025)\nyhigh <- apply(preds, 2, quantile, probs = 0.975)\n\nggplot() +\n  geom_ribbon(aes(x = xseq, ymin = ylow, ymax = yhigh), fill = \"grey\") +\n  geom_line(aes(x = xseq, y = ymean), color = \"black\", linewidth = 1, lineend = \"round\") +\n  geom_errorbar(aes(x = mytib$area_log, ymin = mytib$flow.low, ymax = mytib$flow.high), width = 0.1) +\n  geom_point(aes(x = mytib$area_log, y = mytib$flow.mean), size = 2, shape = 21, fill = \"white\") +\n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Catchment area (log scale)\") + ylab(\"Flow effect (posterior mean)\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n\nTemp-flow interaction: *not sure what this means...*\n\n::: {.cell}\n\n```{.r .cell-code}\nxseq <- seq(from = min(jags.data$area), to = max(jags.data$area), length.out = nsims)\npreds <- matrix(data = NA, nrow = dim(Mcmcdat)[1], ncol = nsims)\n\nfor (j in 1:dim(Mcmcdat)[1]) {\n  preds[j,] <- unlist(Mcmcdat[j,\"alpha.0[4]\"]) + unlist(Mcmcdat[j,\"alpha.1[4]\"])*xseq\n}\nymean <- apply(preds, 2, mean)\nylow <- apply(preds, 2, quantile, probs = 0.025)\nyhigh <- apply(preds, 2, quantile, probs = 0.975)\n\nggplot() +\n  geom_ribbon(aes(x = xseq, ymin = ylow, ymax = yhigh), fill = \"grey\") +\n  geom_line(aes(x = xseq, y = ymean), color = \"black\", linewidth = 1, lineend = \"round\") +\n  geom_errorbar(aes(x = mytib$area_log, ymin = mytib$int.low, ymax = mytib$int.high), width = 0.1) +\n  geom_point(aes(x = mytib$area_log, y = mytib$int.mean), size = 2, shape = 21, fill = \"white\") +\n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Catchment area (log scale)\") + ylab(\"Temp-Flow interaction (posterior mean)\")\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_temp <- seq(from = min(dat$z_air_temp_mean), to = max(dat$z_air_temp_mean), length.out = nsims)\nx_flow <- seq(from = min(dat$z_Yield_mm_log), to = max(dat$z_Yield_mm_log), length.out = nsims)\npred_df_sm <- expand_grid(x_temp, x_flow)\npred_df_lg <- expand_grid(x_temp, x_flow)\n\n# small basins\nte <- param.summary[\"alpha.0[2]\",1] + param.summary[\"alpha.1[2]\",1]*min(jags.data$area)\nfe <- param.summary[\"alpha.0[3]\",1] + param.summary[\"alpha.1[3]\",1]*min(jags.data$area)\ntfe <- param.summary[\"alpha.0[4]\",1] + param.summary[\"alpha.1[4]\",1]*min(jags.data$area)\npred_df_sm$pred <- te*pred_df_sm$x_temp + fe*pred_df_sm$x_flow + tfe*pred_df_sm$x_temp*pred_df_sm$x_flow\n# large basins\nte <- param.summary[\"alpha.0[2]\",1] + param.summary[\"alpha.1[2]\",1]*max(jags.data$area)\nfe <- param.summary[\"alpha.0[3]\",1] + param.summary[\"alpha.1[3]\",1]*max(jags.data$area)\ntfe <- param.summary[\"alpha.0[4]\",1] + param.summary[\"alpha.1[4]\",1]*max(jags.data$area)\npred_df_lg$pred <- te*pred_df_lg$x_temp + fe*pred_df_lg$x_flow + tfe*pred_df_lg$x_temp*pred_df_lg$x_flow\n\n# plot\np1sm <- ggplot(pred_df_sm, aes(x = x_temp, y = pred, color = x_flow, group = x_flow)) +\n    geom_line() +\n    scale_color_distiller(palette = \"BrBG\", direction = +1) +\n    theme_bw() + theme(panel.grid = element_blank()) +\n    labs(color = \"Flow\") + xlab(\"Air temperature\") + ylab(\"Water temperature (deviation)\") + ylim(-7,7)\np2sm <- ggplot(pred_df_sm, aes(x = x_temp, y = x_flow)) +\n    geom_tile(aes(fill = pred)) +\n    scale_fill_distiller(palette = \"Spectral\", limits = c(-7,7)) +\n    theme_bw() + theme(panel.grid = element_blank()) +\n    scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0)) +\n    labs(fill = \"Water\\ntemp.\\ndev.\") + xlab(\"Air temperature\") + ylab(\"Flow\")\n# plot\np1lg <- ggplot(pred_df_lg, aes(x = x_temp, y = pred, color = x_flow, group = x_flow)) +\n    geom_line() +\n    scale_color_distiller(palette = \"BrBG\", direction = +1) +\n    theme_bw() + theme(panel.grid = element_blank()) +\n    labs(color = \"Flow\") + xlab(\"Air temperature\") + ylab(\"Water temperature (deviation)\") + ylim(-7,7)\np2lg <- ggplot(pred_df_lg, aes(x = x_temp, y = x_flow)) +\n    geom_tile(aes(fill = pred)) +\n    scale_fill_distiller(palette = \"Spectral\", limits = c(-7,7)) +\n    theme_bw() + theme(panel.grid = element_blank()) +\n    scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0)) +\n    labs(fill = \"Water\\ntemp.\\ndev.\") + xlab(\"Air temperature\") + ylab(\"Flow\")\n\negg::ggarrange(p1sm, p2sm, p1lg, p2lg, ncol = 2, nrow = 2, labels = c(\"small\", \"small\", \"large\", \"large\"))\n```\n\n::: {.cell-output-display}\n![](ModelTemp-EcoDrought_files/figure-html/unnamed-chunk-60-1.png){width=768}\n:::\n:::\n\n\n\n\nTemp effect - old\n\n::: {.cell}\n\n```{.r .cell-code}\nmydf <- ggfit %>%\n  filter(Parameter %in% c(\"B.site[1,2]\", \"B.site[2,2]\", \"B.site[3,2]\", \"B.site[4,2]\", \"B.site[5,2]\",\n                          \"B.site[6,2]\", \"B.site[7,2]\", \"B.site[8,2]\", \"B.site[9,2]\", \"B.site[10,2]\", \"B.site[11,2]\")) %>%\n  mutate(Parameter = factor(Parameter, levels = c(\"B.site[1,2]\", \"B.site[2,2]\", \"B.site[3,2]\", \"B.site[4,2]\", \"B.site[5,2]\",\n                          \"B.site[6,2]\", \"B.site[7,2]\", \"B.site[8,2]\", \"B.site[9,2]\", \"B.site[10,2]\", \"B.site[11,2]\"))) %>%\n  group_by(Parameter) %>% \n  summarize(mean = mean(value)) %>%\n  ungroup() %>%\n  mutate(site_name = mysites$site_name) %>%\n  left_join(dat %>% group_by(site_name) %>% summarize(area_sqmi = unique(area_sqmi))) %>% \n  left_join(dat %>% mutate(month = month(date)) %>% filter(month %in% c(7:9)) %>% group_by(site_name) %>% summarize(meanSummYield = mean(Yield_mm, na.rm = TRUE))) %>%\n  mutate(z_area = scale(area_sqmi), z_yield = scale(meanSummYield))\n\nsummary(lm(mean ~ z_area + z_yield, data = mydf))\n\np1 <- mydf %>%\n  ggplot(aes(x = log(area_sqmi), y = mean)) +\n  geom_point() + geom_smooth(method = \"lm\") + theme_bw() +\n  xlab(\"Catchment area (log scale)\") + ylab(\"Temperature effect (posterior mean)\") + ggpubr::stat_cor()\n\np2 <- mydf %>%\n  ggplot(aes(x = log(meanSummYield), y = mean)) +\n  geom_point() + geom_smooth(method = \"lm\") + theme_bw() +\n  xlab(\"Mean summer yield (log scale)\") + ylab(\"Temperature effect (posterior mean)\") + ggpubr::stat_cor()\n\nggpubr::ggarrange(p1, p2, nrow = 1)\n```\n:::\n\n\nFlow effect - old\n\n::: {.cell}\n\n```{.r .cell-code}\nmydf <- ggfit %>%\n  filter(Parameter %in% c(\"B.site[1,3]\", \"B.site[2,3]\", \"B.site[3,3]\", \"B.site[4,3]\", \"B.site[5,3]\",\n                          \"B.site[6,3]\", \"B.site[7,3]\", \"B.site[8,3]\", \"B.site[9,3]\", \"B.site[10,3]\", \"B.site[11,3]\")) %>%\n  mutate(Parameter = factor(Parameter, levels = c(\"B.site[1,3]\", \"B.site[2,3]\", \"B.site[3,3]\", \"B.site[4,3]\", \"B.site[5,3]\",\n                          \"B.site[6,3]\", \"B.site[7,3]\", \"B.site[8,3]\", \"B.site[9,3]\", \"B.site[10,3]\", \"B.site[11,3]\"))) %>%\n  group_by(Parameter) %>% \n  summarize(mean = mean(value)) %>%\n  ungroup() %>%\n  mutate(site_name = mysites$site_name) %>%\n  left_join(dat %>% group_by(site_name) %>% summarize(area_sqmi = unique(area_sqmi))) %>% \n  left_join(dat %>% mutate(month = month(date)) %>% filter(month %in% c(7:9)) %>% group_by(site_name) %>% summarize(meanSummYield = mean(Yield_mm, na.rm = TRUE))) %>%\n  mutate(z_area = scale(area_sqmi), z_yield = scale(meanSummYield))\n\nsummary(lm(mean ~ z_area + z_yield, data = mydf))\n\np1 <- mydf %>%\n  ggplot(aes(x = log(area_sqmi), y = mean)) +\n  geom_point() + geom_smooth(method = \"lm\") + theme_bw() +\n  xlab(\"Catchment area (log scale)\") + ylab(\"Flow effect (posterior mean)\") + ggpubr::stat_cor(label.y.npc = \"bottom\")\n\np2 <- mydf %>%\n  ggplot(aes(x = log(meanSummYield), y = mean)) +\n  geom_point() + geom_smooth(method = \"lm\") + theme_bw() +\n  xlab(\"Mean summer yield (log scale)\") + ylab(\"Flow effect (posterior mean)\") + ggpubr::stat_cor(label.y.npc = \"bottom\")\n\nggpubr::ggarrange(p1, p2, nrow = 1)\n```\n:::\n\n\n\nWhat does this mean with respect to the effects of (streamflow) drought on spatial variation in stream temperature across river networks? \n\n* Superficially, during dry years, stream temperatures will warm in larger, lower-elevation rivers (as water temp becomes more responsive to air temp?), while stream temperatures cool in smaller, headwater streams as (cold) groundwater contributions account for an increasingly larger proportion of volumetric discharge.\n* Thus, drought amplifies spatial variability in stream temperature along gradients of stream size (and elevation?)\n\nBut what about variation in groundwater availability among headwater streams? And what about spatial variation in the strength of the interaction between flow and temperature? Perhaps dry years amplify spatial variation in water temperature in multiple dimensions: (1) increased divergence in temperature between small and large streams (as discussed above), but also (2) increased divergence in temperature among headwater systems that differ in groundwater availability. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}