model {

    ###----------------- LIKELIHOOD -----------------###
    
    # Days without an observation on the previous day (first observation in a series)
    # No autoregressive term
    
    for (i in 1:nFirstObsRows){
      temp[firstObsRows[i]] ~ dnorm(stream.mu[firstObsRows[i]], pow(sigma, -2)) 
      stream.mu[firstObsRows[i]] <- trend[firstObsRows[i]]
      trend[firstObsRows[i]] <- inprod(B.0[], X.0[firstObsRows[i], ]) + 
                                inprod(B.site[site[firstObsRows[i]], ], X.site[firstObsRows[i], ]) + 
                                inprod(B.year[year[firstObsRows[i]], ], X.year[firstObsRows[i], ])
      #X.site[firstObsRows[i], ] ~ dnorm(0, pow(1, -2))
      }
    
    # Days with an observation on the previous dat (all days following the first day)
    # Includes autoregressive term (ar1)
    
    for (i in 1:nEvalRows){ 
      temp[evalRows[i]] ~ dnorm(stream.mu[evalRows[i]], pow(sigma, -2))
      stream.mu[evalRows[i]] <- trend[evalRows[i]] + ar1[site[evalRows[i]]] * (temp[evalRows[i]-1] - trend[ evalRows[i]-1 ])
      trend[evalRows[i]] <- inprod(B.0[], X.0[evalRows[i], ]) + 
                            inprod(B.site[site[evalRows[i]], ], X.site[evalRows[i], ]) + 
                            inprod(B.year[year[evalRows[i]], ], X.year[evalRows[i], ])
      #X.site[evalRows[i], ] ~ dnorm(0, pow(1, -2))
      }
    
    
    ###----------------- PRIORS ---------------------###
    
    # ar1, hierarchical by site
    for (i in 1:nsites){
      ar1[i] ~ dnorm(ar1Mean, pow(ar1SD, -2)) T(-1,1)       
    }
    ar1Mean ~ dunif(-1, 1) 
    ar1SD ~ dunif(0, 2)


    # model variance
    sigma ~ dunif(0, 100)
    
    
    # fixed effect coefficients
    for (k in 1:Kfixed) {
      B.0[k] ~ dnorm(0, 0.001)
      }
      
    # random effect coefficients (by site)
    for (k in 1:Krandom) {
      sigma.B.site[k] ~ dunif(0, 100)
      alpha.0[k] ~ dnorm(0, pow(10, -2))
      alpha.1[k] ~ dnorm(0, pow(10, -2))
      for (i in 1:nsites) {
        B.site[i,k] ~ dnorm(mu.B.site[i,k], pow(sigma.B.site[k], -2))
        mu.B.site[i,k] <- alpha.0[k] + alpha.1[k] * area[i]
      }
    }
    
    # YEAR EFFECTS
    for(l in 1:L) {
      sigma.b.year[l] ~ dunif(0, 100)
      for(t in 1:Ti){
        B.year[t, l] ~ dnorm(0, pow(sigma.b.year[l], -2))
        }
      }
    
    # # YEAR EFFECTS
    # # Priors for random effects of year
    # for (t in 1:Ti) { # Ti years
    #   B.year[t, 1:L] ~ dmnorm(mu.year[ ], tau.B.year[ , ])
    #   }
    #   
    # mu.year[1] <- 0
    # 
    # for (l in 2:L) {
    #   mu.year[l] ~ dnorm(0, 0.0001)
    #   }
    #   
    # # Prior on multivariate normal std deviation
    # tau.B.year[1:L, 1:L] ~ dwish(W.year[ , ], df.year)
    # df.year <- L + 1
    # sigma.B.year[1:L, 1:L] <- inverse(tau.B.year[ , ])
    # for (l in 1:L) {
    #   for (l.prime in 1:L) {
    #     rho.B.year[l, l.prime] <- sigma.B.year[l, l.prime]/sqrt(sigma.B.year[l, l]*sigma.B.year[l.prime, l.prime])
    #     }
    #   sigma.b.year[l] <- sqrt(sigma.B.year[l, l])
    # }
    
    
    ###----------------- DERIVED VALUES -------------###
    #residuals[1] <- 0 # hold the place. Not sure if this is necessary...
    for (i in 1:n) {
      residuals[i] <- temp[i] - stream.mu[i]
    }
    
    # variance of model predictions (fixed + random effects)
    var_fit <- (sd(stream.mu))^2

    # residual variance
    var_res <- (sd(residuals))^2

    # calculate Bayesian R^2
    R2 <- var_fit / (var_fit + var_res)

    # Root mean squared error
    rmse <- sqrt(mean(residuals[]^2))
    
    }